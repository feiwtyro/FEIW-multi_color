########################################
############### 换色配置 ################（四色滑槽选择、无外部判断方案方案2-逻辑2）（全手动挤出机配置 分离送料和加载料流程）
########################################



########################################
# 变量
########################################
# params变量 #
# params.TEMPERATURE ##切片Gcode添加 temperature=[nozzle_temperature]

[gcode_macro 变量库]
description: 保存相关变量的空宏
variable_huichou: 90             #feiw 切换宏中的回抽长度参数值【耗材融化处到送料管出口出的长度，该数据为测量挤出头到近程挤出机送料齿轮的长度。数据为参考值，初始设置建议偏大5mm-10mm，但不可小于测量值】
variable_safe0: 15               #feiw 切换宏中的回抽和退料长度衔接点后移参数值(挤出机和手动送料步进电机协同工作长度的额外增量)【用于耗材丝离开挤出机后仍有一段与送料电机协作过程，作为退料的安全量】
variable_jinliao: 100            #feiw 切换宏中的加载耗材时前进长度的参数值【耗材离开送料管进入挤出机后前进长度】
variable_safe1: 15               #feiw 切换宏中的加载和送料长度衔接点后移参数值(挤出机和手动送料步进电机协同工作长度的额外增量)【用于耗材丝进入挤出机时提前与送料电机协作工作，作为进料的安全量】
variable_bowdenspeed: 9000       #feiw 切换宏中的送料管阶段速度，以F单位格式
variable_songsi02: 930           #feiw 切换宏中的耗材预备位置(4in1开始处)到远程送料口出口的长度
variable_songsi13: 900           #feiw 耗材从储备位移动到目标位置长度（由于安装问题，“0,2”耗材和“1,3”耗材到达目标位置需要挤出长度不同

variable_now_filament: 0         #feiw 当前加载的耗材色号，通过【SET_GCODE_VARIABLE MACRO=<macro_name> VARIABLE=<name> VALUE=<value>】修改，例:SET_GCODE_VARIABLE MACRO=变量库 VARIABLE=Thaoma VALUE=1

variable_xm6: 40                 #feiw change_dock中停靠X坐标
variable_ym6: 317                #feiw change_dock中停靠Y坐标
variable_nozzlex: 150            #feiw 换色耗材挤出后断开路过擦嘴点后的停靠坐标（本机change_dock坐标的x方向为擦嘴，定义该坐标后机器每次换料结束经过擦嘴断开冲洗耗材）

gcode:

########################################
# 断料检测——执行自动换料（傻瓜beta版，当前耗材使用完毕后默认启用T3耗材）【该功能默认不使用】
########################################

[filament_switch_sensor auto_change_filament] #确认当前选料电机停靠位为【松开T0夹持】,开始打印前执行
pause_on_runout: False             
#   当设置为"False"并且没有定义runout_gcode时, 禁用耗尽检测。
#   当设置为 "True"时，会在检测到耗尽后立即暂停打印机。默认为 True。
runout_gcode:
#   如果 pause_on_runout 被设置为 True，这个G-Code将在暂停后执行。
  {% set 变量库 = printer["gcode_macro 变量库"] %}
  {% set now_filament = 变量库.now_filament|int %}

  #T{now_filament}
  #change_out T_FILAMENT={now_filament}    #feiw 执行换色前处理(退丝)
  # 退料结束
  # 加载设定耗材
  SAVE_GCODE_STATE # 保存当前g代码坐标解析状态，便于进行Gcode编辑后恢复状态
  # 触发断料检测后耗材已经无法回抽，换色前处理change_out无法执行，更新会持续挤出指定长度
  G90                                   # 所有轴使用绝对定位
  M83                                   # 挤出机使用相对定位
  change_dock                           # 移动到耗材停靠坞
  G1 E10 F600                           # F:毫米/每分钟 挤出10mm耗材
  FORCE_MOVE STEPPER=extruder DISTANCE=600 VELOCITY={600/60} # [ACCEL=<value>]
  # 此命令将以给定的恒定速度（以毫米/秒为单位）强制将给定的步进器移动给定的距离（以毫米为单位）。
  T1                                    #feiw 选择自动料下加载的耗材
  change_in T_FILAMENT=1                 #feiw 执行换色后处理(进丝)
  UnT T_FILAMENT=1                      #feiw 卸载当前耗材夹持
  nozzle1
  RESTORE_GCODE_STATE # 恢复当前g代码坐标解析状态

#insert_gcode:
#   在检测到耗材插入后会执行的 G-Code 命令列表。
#event_delay: 3.0
#   事件之间的最小延迟时间（秒）。在这个时间段内触发的事件将被默许忽略。
#pause_delay: 0.5
#   暂停命令和执行 runout_gcode 之间的延迟时间, 单位是秒。
switch_pin: ^!PJ0
#   连接到检测开关的引脚。
#   必须提供此参数。

########################################
# 换色前后准备宏（暂定打印 可能切料 移动到指定区域 ）
########################################
# SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0 设置耗材检测停用
# MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED=35 ACCEL=6000 MOVE={huichou+safe0} SYNC=0
## 将耗材手动步进电机和挤出机同步匹配 (设置当前位置为0坐标、速度为35mm/s（等效F2100）、加速度为移动{huichou}长度、允许和后面的Gcode同步执行) 
## 【添加“SYNC=0”后，下一行需要存在G代码方可执行（执行下一行的G代码时同步运行）】
    
[gcode_macro change_out]   #feiw 耗材切换前处理
description: 耗材切换处理-卸载耗材
gcode:
  {% set 变量库 = printer["gcode_macro 变量库"] %}
  {% set huichou = 变量库.huichou|int %}               # 设置变量“高速回抽长度”
  {% set safe0 = 变量库.safe0|int %}                   # 设置变量“回抽长度和退料长度衔接点后移”
  {% set songsi02 = 变量库.songsi02|int %}             # 设置变量“T0,T2送丝长度”
  {% set songsi13 = 变量库.songsi13|int %}             # 设置变量“T1,T3送丝长度”
  {% set bowdenspeed = 变量库.bowdenspeed|int %}       # 设置变量“管内速度”
  {% set Current_T = params.T_FILAMENT|float %}       # T_FILAMENT=(0,1,2,3) 引用虚拟外部变量(指定耗材号)
  SAVE_GCODE_STATE     # 保存当前g代码坐标解析状态，便于进行Gcode编辑后恢复状态
  #切料在这里之前
  {% if printer.extruder.temperature < 180 %}          #feiw 如果当前挤出机温度不够 加热挤出机到235度
   M109 S235
  {% endif %}
  G91                                                  # 设置相对坐标模式(G91)
  M83                                                  # 挤出机使用相对定位
  {% if Current_T == 0 or Current_T == 2 %}            #feiw 对于T0,T2耗材，回抽方向正常
    # 回抽进料，用于挤出喉管内变形耗材  F:毫米/每分钟
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={600/60} ACCEL=5000 MOVE=-10 SYNC=0
    G1 E10 F600                                        # F:毫米/每分钟 【手动步进电机的速度单位为mm/s,与G1指令的F命令不同】
    # 回抽退料，用于快速离开热端  F:毫米/每分钟
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={2700/60} ACCEL=5000 MOVE=30 SYNC=0 # 将耗材手动步进电机和挤出机同步（设置相同的参数）。速度单位不同：45mm/s（等效F2700）
    G1 E-30 F2700                                      # F:毫米/每分钟 【手动步进电机的速度单位为mm/s,与G1指令的F命令不同】
    M400                                               # 等待当前所有移动指令完成
    # 回抽退料，用于慢速离开挤出机  F:毫米/每分钟
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={1800/60} ACCEL=5000 MOVE={huichou+safe0-30} SYNC=0
    G1 E-{huichou+safe0-30} F1800
    M400
    #G4 P2000                                           # 驻留：G4 P<毫秒> 【调试阶段用】
    # 送料管退料
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={bowdenspeed/60} ACCEL=3000 MOVE={songsi02-safe0}
  {% else %}                                           #feiw 对于T1,T3耗材，回抽方向反向
    # 回抽进料，用于挤出喉管内变形耗材  F:毫米/每分钟
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={600/60} ACCEL=5000 MOVE=10 SYNC=0
    G1 E10 F600
    # 回抽退料，用于快速离开热端  F:毫米/每分钟
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={2700/60} ACCEL=5000 MOVE=-30 SYNC=0
    G1 E-30 F2700
    M400                                               # 等待当前所有移动指令完成
    # 回抽退料，用于慢速离开挤出机  F:毫米/每分钟
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={1800/60} ACCEL=5000 MOVE=-{huichou+safe0-30} SYNC=0
    G1 E-{huichou+safe0-30} F1800
    M400
    #G4 P2000                                           # 驻留：G4 P<毫秒> 【调试阶段用】
    #送料管退料
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={bowdenspeed/60} ACCEL=3000 MOVE=-{songsi13-safe0}
  {% endif %}
  RESTORE_GCODE_STATE   # 恢复当前g代码坐标解析状态 如果指定“MOVE=1”，则将发出刀头移动以返回到先前的 XYZ 位置。如果指定了“MOVE_SPEED”，则刀头移动将以给定速度（以毫米/秒为单位）执行；否则工具头移动将使用恢复的 g 代码速度。
[gcode_macro change_in]   #feiw 耗材切换后处理
description: 耗材切换处理-加载耗材
gcode:
  {% set 变量库 = printer["gcode_macro 变量库"] %}
  {% set jinliao = 变量库.jinliao|int %}               # 设置变量“新耗材加载前进长度”
  {% set safe1 = 变量库.safe1|int %}                   # 设置变量“进料长度和送料长度衔接点后移”
  {% set songsi02 = 变量库.songsi02|int %}             # 设置变量“T0,T2送丝长度”
  {% set songsi13 = 变量库.songsi13|int %}             # 设置变量“T1,T3送丝长度”
  {% set bowdenspeed = 变量库.bowdenspeed|int %}       # 设置变量“管内速度”
  # 设置旧温度为宏反馈温度（如果想要用“params.TEMPERATURE”获取温度，要在切片的开始Gcode中添加“temperature=[nozzle_temperature]”）（“printer.extruder.temperature”为当前热端温度）
  {% set Current_T = params.T_FILAMENT|float %}       # T_FILAMENT=(0,1,2,3) 引用虚拟外部变量(指定耗材号)
  SAVE_GCODE_STATE                                    # 保存当前g代码坐标解析状态，便于进行Gcode编辑后恢复状态
  G91                                                 # 设置相对坐标模式(G91)
  M83                                                 # 挤出机使用相对定位
  {% if printer.extruder.temperature < 180 %}         #feiw 如果旧挤出机温度小于180 加热挤出机到235度
    M109 S235
  {% else %}
    M104 S{printer.extruder.temperature}
  {% endif %}
  # 以下为换料后加载耗材挤出料宏
  G92 E0                       # 重置当前E坐标为0
  {% if Current_T == 0 or Current_T == 2 %}           #feiw 对于T0,T2耗材，回抽方向正常
    # 推进耗材加载
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={bowdenspeed/60} ACCEL=3000 MOVE=-{songsi02-safe1} # speed=35等效于F2100
    #G4 P2000                                          # 驻留：G4 P<毫秒> 【调试阶段用】
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={600/60} ACCEL=6000 MOVE=-{jinliao+safe1} SYNC=0    # 将耗材手动步进电机和挤出机同步匹配 (设置当前位置为0坐标、速度为2000、移动{huichou}长度、允许和后面的Gcode同步执行)
    G1 E{jinliao+safe1} F600                          # F:毫米/每分钟
    M400                                              # 等待当前所有移动指令完成
  {% else %}                                          #feiw 对于T1,T3耗材，回抽方向反向
    # 推进耗材加载
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={bowdenspeed/60} ACCEL=3000 MOVE={songsi13-safe1}
    #G4 P2000                                          # 驻留：G4 P<毫秒> 【调试阶段用】
    MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={600/60} ACCEL=6000 MOVE={jinliao+safe1} SYNC=0
    G1 E{jinliao+safe1} F600                          # F:毫米/每分钟
    M400                                              # 等待当前所有移动指令完成
  {% endif %}
  RESTORE_GCODE_STATE  # 恢复当前g代码坐标解析状态 如果指定“MOVE=1”，则将发出刀头移动以返回到先前的 XYZ 位置。如果指定了“MOVE_SPEED”，则刀头移动将以给定速度（以毫米/秒为单位）执行；否则工具头移动将使用恢复的 g 代码速度。

########################################
# 换色宏 移动到指定位置
########################################

[gcode_macro change_dock]
description: 在klipper配置下更换耗材(吐料)时停靠地点
gcode:
  {% set 变量库 = printer["gcode_macro 变量库"] %}
  {% set jinliao = 变量库.jinliao|int %}
  {% set X = 变量库.xm6|float %}
  {% set Y = 变量库.ym6|float %}
  #{% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state # 保存当前g代码坐标解析状态，便于进行Gcode编辑后恢复状态
  #PAUSE
  #{% if printer.extruder.temperature < 180 %}          #feiw 如果当前挤出机温度不够 加热挤出机到235度
  # M109 S235
  #{% endif %}
  {% if "xyz" not in printer.toolhead.homed_axes %}    # 如果未归零 打印机归零
   G28
  {% endif %}
  G90                         #所有轴使用绝对定位
  M83                         #挤出机使用相对定位
#  G91 # 设置相对坐标模式(G91)
  G1 E-.8 F2700
  #G1 Z{Z}
#  G90 # 设置绝对坐标模式(G90)
  G1 X{X} Y{Y} F9000
#  G91 # 设置相对坐标模式(G91)
  # 向前推进挤出加热过程中膨胀的耗材，让回抽的耗材尽可能不要头部膨胀    【在没有夹持耗材前执行】
  G1 E5 F500
  M400
  G1 E-.8 F9000
  RESTORE_GCODE_STATE NAME=M600_state # 恢复当前g代码坐标解析状态

########################################
# 擦嘴部分
########################################

[servo nozzle_servo]  #使用方式【SET_SERVO SERVO=nozzle_servo ANGLE=180】
pin:PB5
#   控制伺服的PWM输出引脚。此参数必须为提供。
maximum_servo_angle: 90
#   此伺服可以设置的最大角度（以度为单位）默认为180度。
#minimum_pulse_width: 0.001
#   最小脉冲宽度时间（以秒为单位）。这应该对应角度为0度。默认值为0.001秒。
#maximum_pulse_width: 0.002
#   最大脉冲宽度时间（以秒为单位）。这应该对应角度为maximum_servo_angle。默认值为0.002秒。
#initial_angle:
#   将伺服设置为的初始角度（以度为单位）。默认值为启动时不发送任何信号。
#initial_pulse_width:
#   将伺服设置为的初始脉冲宽度时间（以秒为单位）。（此仅当未设置initial_angle时有效。）默认为不启动时发送任何信号。


[gcode_macro nozzle1]
gcode:
  {% set 变量库 = printer["gcode_macro 变量库"] %}
  {% set nozzlex = 变量库.nozzlex|float %}            # 设置变量“移动到x指定坐标”
  SAVE_GCODE_STATE     # 保存当前g代码坐标解析状态，便于进行Gcode编辑后恢复状态
  #{% if "xyz" not in printer.toolhead.homed_axes %} # 如果未归零 打印机归零
  # G28
  #{% endif %}
  G90                                                  #所有轴使用绝对定位
  M83                                                  #挤出机使用相对定位
  #------擦拭喷嘴
  change_dock
  G1 X{nozzlex} F9000                                  #feiw 向擦嘴的铁氟龙管走一遍 断开挤出的线条
  RESTORE_GCODE_STATE   # 恢复当前g代码坐标解析状态

########################################
# 用于判断当前是否是T0挤出的宏
# QUERY_FILAMENT_SENSOR SENSOR=T0_sensor【控制台输入 查看是否触发】
########################################

[gcode_macro default_T0]
description: 将耗材位置置于初始T0不被夹持位【恢复默认状态】
gcode:
#  {% if "QUERY_FILAMENT_SENSOR SENSOR=T0_sensor" == True %}
  {% if printer['filament_switch_sensor T0_sensor'].filament_detected == True %}  #feiw 当开关“T0_sensor”结果为检查到耗材为真时
    # 无执行项
  {% else %}
    MANUAL_STEPPER STEPPER=filament_select SET_POSITION=0 MOVE=360 STOP_ON_ENDSTOP=1
    ## 【如果指定STOP_ON_ENDSTOP=1，则如果ENDSTOP报告触发，则移动将提前结束（使用STOP_ON_ENDSTOP=2完成移动，即使ENDSTOP未触发，也不会出错】
    MANUAL_STEPPER STEPPER=filament_select SET_POSITION=0 MOVE=0
    SET_GCODE_VARIABLE MACRO=变量库 VARIABLE=now_filament VALUE=0           # 修改耗材色号为T0
  {% endif %}

[gcode_macro default_T0x]
description: 开机确保当前使用耗材为T0的宏(耗材加载初始化) （不被应用 只作为学习用）
gcode:
#  {% if "QUERY_FILAMENT_SENSOR SENSOR=T0_sensor" == True %}
  {% if printer['filament_switch_sensor T0_sensor'].filament_detected == True %}  #feiw 当开关“T0_sensor”结果为检查到耗材为真时
    # 无执行项
  {% else %}
    {% if printer.extruder.temperature < 200 %}  #feiw 如果当前挤出机温度不够 加热挤出机到235度
      M109 S235
    {% endif %}
    # 遍历耗材并确保全部退料
    T1
    change_out T_FILAMENT=1               #feiw 执行换色前处理(退丝)
    T2
    change_out T_FILAMENT=2               #feiw 执行换色前处理(退丝)
    T3
    change_out T_FILAMENT=3               #feiw 执行换色前处理(退丝)
    # 退料遍历结束
    # 加载一号耗材
    T0
    change_in T_FILAMENT=0                 #feiw 执行换色后处理(进丝)
    UnT T_FILAMENT=0                      #feiw 卸载当前耗材夹持
  {% endif %}

########################################
# 用于重置当前T0挤出的宏（弄到结束gcode里面去）
########################################

[gcode_macro xxx_T0]
description: 将当前挤出确定为T0(添加到结束gcode 将多色打印后的最后耗材色重置为T0)
gcode:
  {% set 变量库 = printer["gcode_macro 变量库"] %}
  {% set now_filament = 变量库.now_filament|int %}

  SAVE_GCODE_STATE # 保存当前g代码坐标解析状态，便于进行Gcode编辑后恢复状态
  {% if now_filament != 0 %}  #feiw 判断当前耗材丝，如果不等于T0
    G91                                                #feiw 设置为相对坐标模式(G91)
    G1 Z0.4 F500                                       #feiw 最近两次撞机的原因（可能是默认的坐标模式是绝对坐标模式的原因）
    T{now_filament}                                    #feiw 复夹持当前耗材
    change_dock                                        #feiw 移动到换色坞
    change_out T_FILAMENT={now_filament}               #feiw 执行换色前处理(退丝)
    T0                                                 #feiw 加载T0耗材(夹持)
    change_in T_FILAMENT=0                             #feiw 执行换色后处理(进丝)
    UnT T_FILAMENT=0                                   #feiw 卸载当前耗材夹持
    #feiw 挤出一段废料
    {% if printer.extruder.temperature < 180 %}        #feiw 如果当前挤出机温度不够 加热挤出机到235度
      M109 S235
    {% endif %}
    G90                                                # 所有轴使用绝对定位
    M83                                                # 挤出机使用相对定位
    G92 E0                                             # 重置当前E坐标为0
    G1 E10 F600                                        #feiw 挤出
    nozzle1                                            #feiw 切断废料
  {% endif %}
  RESTORE_GCODE_STATE # 恢复当前g代码坐标解析状态
  
  ;{% endwhile %}

########################################
# 用于判断的开关
# QUERY_FILAMENT_SENSOR SENSOR=T0_sensor
# {% if printer['filament_switch_sensor T0_sensor'].filament_detected == True %}
########################################

[filament_switch_sensor T0_sensor] #确认当前选料电机停靠位为【松开T0夹持】
pause_on_runout: False            
#   当设置为"False"并且没有定义runout_gcode时, 禁用耗尽检测。
#   当设置为 "True"时，会在检测到耗尽后立即暂停打印机。默认为 True。
#runout_gcode:
#   如果 pause_on_runout 被设置为 True，这个G-Code将在暂停后执行。
#insert_gcode:
#   在检测到耗材插入后会执行的 G-Code 命令列表。
#event_delay: 3.0
#   事件之间的最小延迟时间（秒）。在这个时间段内触发的事件将被默许忽略。
#pause_delay: 0.5
#   暂停命令和执行 runout_gcode 之间的延迟时间, 单位是秒。
switch_pin: ^!PE4
#   连接到检测开关的引脚。
#   必须提供此参数。

########################################
# 用于切换的宏（设定T1耗材丝夹持为初始位）（即当前使用T0耗材）
########################################
[gcode_macro T0]
description: 更换耗材夹持T0
gcode:
  # MANUAL_STEPPER STEPPER=filament_select SET_POSITION=0 MOVE=0 
  #{% set Current_T = params.T_FILAMENT|default(0)|float %} #T_FILAMENT=(0,1,2,3)
  MANUAL_STEPPER STEPPER=filament_select MOVE=180                   # 将耗材丝选择挤出机至于180度位置 夹持T0耗材
  SET_GCODE_VARIABLE MACRO=变量库 VARIABLE=now_filament VALUE=0           # 修改耗材色号为T0
[gcode_macro T1]
description: 更换耗材丝夹持T1
gcode:
  MANUAL_STEPPER STEPPER=filament_select MOVE=0                     # 将耗材丝选择挤出机至于0度位置 夹持T1耗材
  SET_GCODE_VARIABLE MACRO=变量库 VARIABLE=now_filament VALUE=1           # 修改耗材色号为T1
[gcode_macro T2]
description: 更换耗材丝夹持T2
gcode:
  MANUAL_STEPPER STEPPER=filament_select MOVE=-90                   # 将耗材丝选择挤出机至于-90度位置 夹持T2耗材
  SET_GCODE_VARIABLE MACRO=变量库 VARIABLE=now_filament VALUE=2           # 修改耗材色号为T2
[gcode_macro T3]
description: 更换耗材丝夹持T3
gcode:
  MANUAL_STEPPER STEPPER=filament_select MOVE=90                    # 将耗材丝选择挤出机至于90度位置 夹持T3耗材
  SET_GCODE_VARIABLE MACRO=变量库 VARIABLE=now_filament VALUE=3           # 修改耗材色号为T3

[gcode_macro UnT]
description: 关闭耗材丝夹持
gcode: 
  #{% set Current_T = params.T_FILAMENT|default(0)|float %} 
  {% set 变量库 = printer["gcode_macro 变量库"] %}
  {% set now_filament = 变量库.now_filament|int %}
  {% set Current_T = params.T_FILAMENT|default(now_filament)|float %}   #T_FILAMENT=(0,1,2,3) 引用虚拟外部变量
  # MANUAL_STEPPER STEPPER=filament_select MOVE=180                   # 将耗材丝选择挤出机旋转180度 松开当前耗材夹持
  # MANUAL_STEPPER STEPPER=filament_select SET_POSITION=0 MOVE=180    # 将耗材丝选择挤出机当前位置置于0，然后旋转180度 松开当前耗材夹持

  {% if Current_T == 0 %}
    MANUAL_STEPPER STEPPER=filament_select MOVE=0                     # 将耗材丝选择挤出机至于0度位置 松开T0耗材
  {% elif Current_T == -1 %}
    MANUAL_STEPPER STEPPER=filament_select MOVE=0                     # 将耗材丝选择挤出机至于0度位置 松开T0耗材(开机初始状态下，前色值为-1)
  {% elif Current_T == 1 %}
    MANUAL_STEPPER STEPPER=filament_select MOVE=180                   # 将耗材丝选择挤出机至于180度位置 松开T1耗材
  {% elif Current_T == 2 %}
    MANUAL_STEPPER STEPPER=filament_select MOVE=90                    # 将耗材丝选择挤出机至于90度位置 松开T2耗材
  {% elif Current_T == 3 %}
    MANUAL_STEPPER STEPPER=filament_select MOVE=-90                   # 将耗材丝选择挤出机至于-90度位置 松开T3耗材
  {% endif %}
  #SYNC_EXTRUDER_MOTION EXTRUDER=extruder_T MOTION_QUEUE= # 将挤出电机extruder_T与挤出功能断开同步（停用自定义的挤出机电机）


########################################
# 其他耗材对应的挤出
########################################

[manual_stepper filament_motion]#feiw 对应M2轴设置 手动步进电机-送料
step_pin = M2_STP
dir_pin = M2_DIR                #feiw 电机方向引脚设置 感叹号反向
enable_pin = !M2_EN
microsteps = 16                 #feiw 细分
rotation_distance = 34.7        #feiw 选择一圈对应的圆周长度 矫正方法：1、G91相对模式 2、G1 E150 F60挤出150mm长度材料 计算方式：实际挤出A x 现在rotation_distance值 / 需要挤出数值B {本机bmg挤出机 23.462385}{伽利略挤出机 35 34.33}
#gear_ratio:50:17                #feiw 无齿比 {bmg挤出机 50:17}{fz36挤出机 50:10}{伽利略挤出机 7.5:1}
full_steps_per_rotation: 200    #feiw 定义旋转一圈的脉冲
accel:300                       #feiw 设置加速度默认值（不指定为0）
[tmc2209 manual_stepper filament_motion]
uart_pin: M2_RX
interpolate: False
run_current: 0.7
hold_current: 0.5               #feiw 保持电流 静止不懂时的电流
sense_resistor: 0.110
stealthchop_threshold: 999999

[manual_stepper filament_select]#feiw 对应M3轴设置 手动步进电机-耗材选择
# 使用实例 【MANUAL_STEPPER STEPPER=filament_select MOVE=90 SPEED=360】 控制以速度5mm/s 旋转90长度
step_pin = M3_STP
dir_pin = M3_DIR                #feiw 电机方向引脚设置 感叹号反向
enable_pin = !M3_EN
microsteps = 16                 #feiw 细分
rotation_distance = 360         #feiw 定义一圈对应的长度。此处用法特殊 用于标记选择多少度【千万不要乱改】
full_steps_per_rotation: 200    #feiw 定义旋转一圈的脉冲
velocity:10000
#   设置步进电机的默认速度（单位：mm/s）。这个值会在 MANUAL_STEPPER
#   命令没有指定一个 SPEED 参数时会被使用。
#   默认为 5 mm/s。
accel:3000
#   设置步进电机的默认加速度（单位：mm/s^2）。设置加速度为零将导致
#   没有加速度。这个值会在 MANUAL_STEPPER 命令没有指定 ACCEL 参数时
#   会被使用。
#   默认为 0。
endstop_pin: ^PD2 #zmax接口 (感叹号取反)
#   限位开关检测引脚。如果定义了这个参数，可以通过在 MANUAL_STEPPER
#   运动命令中添加一个 STOP_ON_ENDSTOP 参数来执行 "归位动作" 。
[tmc2209 manual_stepper filament_select]
uart_pin: M3_RX
interpolate: False
run_current: 0.7
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999


########################################
# 校准耗材挤出“filament_motion”的“rotation_distance”数值
########################################
[gcode_macro calibrationRotation]   #feiw 同步挤出一定长度50mm，用来确认选色器的相同挤出指令下会稍微多挤出一丝
description: 粗略校准耗材挤出“filament_motion”的“rotation_distance”数值
gcode:
  {% if printer.extruder.temperature < 180 %}         #feiw 如果旧挤出机温度小于180 加热挤出机到235度
    M109 S235
  {% else %}
    M104 S{printer.extruder.temperature}
  {% endif %}
  # 以下为换料后加载耗材挤出料宏
  G92 E0                       # 重置当前E坐标为0
  #feiw 测试时，耗材在选色器的T0耗材位，同时保证机器近程挤出机已经可以挤出耗材。然后手动旋转指针将T0耗材丝夹持
  #feiw 测试方式，执行这段宏。若张紧器有稍微抬起的倾向则正常。
  #feiw 若张紧器抬起太多改大“filament_motion”的“rotation_distance”数值
  #feiw 若张紧器没有抬起甚至听到挤出机啃料的声音则改大“filament_motion”的“rotation_distance”数值
  #G4 P2000                                          # 驻留：G4 P<毫秒> 【调试阶段用】
  MANUAL_STEPPER STEPPER=filament_motion SET_POSITION=0 SPEED={600/60} ACCEL=6000 MOVE=-50 SYNC=0    # 将耗材手动步进电机和挤出机同步匹配 (设置当前位置为0坐标、速度为2000、移动{huichou}长度、允许和后面的Gcode同步执行)
  G1 E50 F600                                       # F:毫米/每分钟
  M400                                              # 等待当前所有移动指令完成